#include "be_constobj.h"

static be_define_const_map_slots(be_class_tasmota_map) {
    { be_const_key(run_deferred, -1), be_const_closure(Tasmota_run_deferred_closure) },
    { be_const_key(_drivers, 42), be_const_var(0) },
    { be_const_key(gc, -1), be_const_closure(Tasmota_gc_closure) },
    { be_const_key(strftime, -1), be_const_func(l_strftime) },
    { be_const_key(web_send_decimal, 49), be_const_func(l_webSendDecimal) },
    { be_const_key(yield, -1), be_const_func(l_yield) },
    { be_const_key(remove_cmd, -1), be_const_closure(Tasmota_remove_cmd_closure) },
    { be_const_key(add_rule, -1), be_const_closure(Tasmota_add_rule_closure) },
    { be_const_key(find_op, 50), be_const_closure(Tasmota_find_op_closure) },
    { be_const_key(try_rule, 68), be_const_closure(Tasmota_try_rule_closure) },
    { be_const_key(cmd_res, -1), be_const_var(1) },
    { be_const_key(eth, -1), be_const_func(l_eth) },
    { be_const_key(time_dump, -1), be_const_func(l_time_dump) },
    { be_const_key(chars_in_string, -1), be_const_closure(Tasmota_chars_in_string_closure) },
    { be_const_key(global, 38), be_const_var(2) },
    { be_const_key(millis, 19), be_const_func(l_millis) },
    { be_const_key(settings, -1), be_const_var(3) },
    { be_const_key(fast_loop, -1), be_const_closure(Tasmota_fast_loop_closure) },
    { be_const_key(set_light, -1), be_const_closure(Tasmota_set_light_closure) },
    { be_const_key(remove_fast_loop, -1), be_const_closure(Tasmota_remove_fast_loop_closure) },
    { be_const_key(get_switch, 13), be_const_func(l_getswitch) },
    { be_const_key(_debug_present, 58), be_const_var(4) },
    { be_const_key(_cmd, -1), be_const_func(l_cmd) },
    { be_const_key(remove_timer, 2), be_const_closure(Tasmota_remove_timer_closure) },
    { be_const_key(publish, -1), be_const_func(l_publish) },
    { be_const_key(arch, -1), be_const_func(l_arch) },
    { be_const_key(_settings_def, -1), be_const_comptr(&be_tasmota_settings_struct) },
    { be_const_key(add_driver, -1), be_const_closure(Tasmota_add_driver_closure) },
    { be_const_key(_timers, 11), be_const_var(5) },
    { be_const_key(add_cron, -1), be_const_closure(Tasmota_add_cron_closure) },
    { be_const_key(scale_uint, -1), be_const_func(l_scaleuint) },
    { be_const_key(check_not_method, -1), be_const_closure(Tasmota_check_not_method_closure) },
    { be_const_key(web_send, 63), be_const_func(l_webSend) },
    { be_const_key(get_option, -1), be_const_func(l_getoption) },
    { be_const_key(time_str, -1), be_const_closure(Tasmota_time_str_closure) },
    { be_const_key(response_append, 26), be_const_func(l_respAppend) },
    { be_const_key(_fl, -1), be_const_var(6) },
    { be_const_key(get_free_heap, -1), be_const_func(l_getFreeHeap) },
    { be_const_key(_settings_ptr, -1), be_const_comptr(&Settings) },
    { be_const_key(exec_cmd, -1), be_const_closure(Tasmota_exec_cmd_closure) },
    { be_const_key(rtc, 18), be_const_func(l_rtc) },
    { be_const_key(read_sensors, 52), be_const_func(l_read_sensors) },
    { be_const_key(exec_tele, -1), be_const_closure(Tasmota_exec_tele_closure) },
    { be_const_key(_crons, 51), be_const_var(7) },
    { be_const_key(publish_result, 34), be_const_func(l_publish_result) },
    { be_const_key(hs2rgb, -1), be_const_closure(Tasmota_hs2rgb_closure) },
    { be_const_key(memory, -1), be_const_func(l_memory) },
    { be_const_key(wire1, -1), be_const_var(8) },
    { be_const_key(remove_driver, -1), be_const_closure(Tasmota_remove_driver_closure) },
    { be_const_key(get_light, -1), be_const_closure(Tasmota_get_light_closure) },
    { be_const_key(wifi, -1), be_const_func(l_wifi) },
    { be_const_key(run_cron, -1), be_const_closure(Tasmota_run_cron_closure) },
    { be_const_key(load, -1), be_const_closure(Tasmota_load_closure) },
    { be_const_key(wire_scan, 72), be_const_closure(Tasmota_wire_scan_closure) },
    { be_const_key(find_key_i, 76), be_const_closure(Tasmota_find_key_i_closure) },
    { be_const_key(resp_cmnd_error, -1), be_const_func(l_respCmndError) },
    { be_const_key(get_power, 69), be_const_func(l_getpower) },
    { be_const_key(_global_def, 56), be_const_comptr(&be_tasmota_global_struct) },
    { be_const_key(_ccmd, 60), be_const_var(9) },
    { be_const_key(cmd, 12), be_const_closure(Tasmota_cmd_closure) },
    { be_const_key(set_timer, -1), be_const_closure(Tasmota_set_timer_closure) },
    { be_const_key(resolvecmnd, 9), be_const_func(l_resolveCmnd) },
    { be_const_key(wire2, 5), be_const_var(10) },
    { be_const_key(get_switches, -1), be_const_func(l_getswitch) },
    { be_const_key(remove_rule, 53), be_const_closure(Tasmota_remove_rule_closure) },
    { be_const_key(next_cron, -1), be_const_closure(Tasmota_next_cron_closure) },
    { be_const_key(resp_cmnd, -1), be_const_func(l_respCmnd) },
    { be_const_key(publish_rule, -1), be_const_func(l_publish_rule) },
    { be_const_key(set_power, 70), be_const_func(l_setpower) },
    { be_const_key(strptime, -1), be_const_func(l_strptime) },
    { be_const_key(time_reached, -1), be_const_func(l_timereached) },
    { be_const_key(gen_cb, -1), be_const_closure(Tasmota_gen_cb_closure) },
    { be_const_key(delay, -1), be_const_func(l_delay) },
    { be_const_key(_rules, 33), be_const_var(11) },
    { be_const_key(resp_cmnd_failed, -1), be_const_func(l_respCmndFailed) },
    { be_const_key(init, -1), be_const_closure(Tasmota_init_closure) },
    { be_const_key(wd, -1), be_const_var(12) },
    { be_const_key(remove_cron, -1), be_const_closure(Tasmota_remove_cron_closure) },
    { be_const_key(log, -1), be_const_func(l_logInfo) },
    { be_const_key(add_cmd, -1), be_const_closure(Tasmota_add_cmd_closure) },
    { be_const_key(save, -1), be_const_func(l_save) },
    { be_const_key(_global_addr, 78), be_const_comptr(&TasmotaGlobal) },
    { be_const_key(add_fast_loop, 77), be_const_closure(Tasmota_add_fast_loop_closure) },
    { be_const_key(resp_cmnd_done, 47), be_const_func(l_respCmndDone) },
    { be_const_key(exec_rules, -1), be_const_closure(Tasmota_exec_rules_closure) },
    { be_const_key(i2c_enabled, -1), be_const_func(l_i2cenabled) },
    { be_const_key(resp_cmnd_str, 17), be_const_func(l_respCmndStr) },
    { be_const_key(event, -1), be_const_closure(Tasmota_event_closure) },
};

static be_define_const_map(
    be_class_tasmota_map,
    88
);

BE_EXPORT_VARIABLE be_define_const_class(
    be_class_tasmota,
    13,
    NULL,
    Tasmota
);
